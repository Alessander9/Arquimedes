@model Estudiante

@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="es">
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>DetalleEstudiante</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">

    <style>
        body {
            background-image: linear-gradient(to right, #5e7d82, #3c6c7c, #185a79, #004774, #00326a, #002863, #031d5b, #081252, #08114f, #08104d, #070e4a, #070d48);
        }
    </style>
    <!-- Tailwind CSS CDN -->
    <script src="https://cdn.tailwindcss.com"></script>
    <!-- jsPDF Library -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.4.0/jspdf.umd.min.js"></script>
    <!-- jsPDF AutoTable Plugin -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.25/jspdf.plugin.autotable.min.js"></script>
</head>
<body class="bg-gray-100 font-sans">
    <div id="content" class="max-w-4xl mx-auto bg-white shadow-md rounded-lg p-6 mt-10">
        <h3 class="text-3xl font-bold text-blue-500 mb-6 flex items-center gap-2">
            <i class="fas fa-user-graduate fa-lg"></i> Detalle del Estudiante
        </h3>
        <hr class="border-t border-gray-300 mb-6" />
        <dl class="grid grid-cols-1 sm:grid-cols-2 gap-4">
            <div>
                <dt class="text-sm font-semibold text-gray-600 flex items-center">
                    <i class="fas fa-user fa-lg text-blue-500 mr-2"></i> @Html.DisplayNameFor(model => model.NombreEstudiante)
                </dt>
                <dd class="text-lg text-gray-800">
                    @Html.DisplayFor(model => model.NombreEstudiante)
                </dd>
            </div>
            <div>
                <dt class="text-sm font-semibold text-gray-600 flex items-center">
                    <i class="fas fa-user-tag fa-lg text-blue-500 mr-2"></i> @Html.DisplayNameFor(model => model.ApellidoEstudiante)
                </dt>
                <dd class="text-lg text-gray-800">
                    @Html.DisplayFor(model => model.ApellidoEstudiante)
                </dd>
            </div>
            <div>
                <dt class="text-sm font-semibold text-gray-600 flex items-center">
                    <i class="fas fa-calendar-alt fa-lg text-blue-500 mr-2"></i> @Html.DisplayNameFor(model => model.EdadEstudiante)
                </dt>
                <dd class="text-lg text-gray-800">
                    @Html.DisplayFor(model => model.EdadEstudiante)
                </dd>
            </div>
            <div>
                <dt class="text-sm font-semibold text-gray-600 flex items-center">
                    <i class="fas fa-graduation-cap fa-lg text-blue-500 mr-2"></i> @Html.DisplayNameFor(model => model.AnioEstudiante)
                </dt>
                <dd class="text-lg text-gray-800">
                    @Html.DisplayFor(model => model.AnioEstudiante)
                </dd>
            </div>
            <div>
                <dt class="text-sm font-semibold text-gray-600 flex items-center">
                    <i class="fas fa-layer-group fa-lg text-blue-500 mr-2"></i> @Html.DisplayNameFor(model => model.SeccionEstudiante)
                </dt>
                <dd class="text-lg text-gray-800">
                    @Html.DisplayFor(model => model.SeccionEstudiante)
                </dd>
            </div>
            <div>
                <dt class="text-sm font-semibold text-gray-600 flex items-center">
                    <i class="fas fa-school fa-lg text-blue-500 mr-2"></i> @Html.DisplayNameFor(model => model.GradoAcademico)
                </dt>
                <dd class="text-lg text-gray-800">
                    @Html.DisplayFor(model => model.GradoAcademico)
                </dd>
            </div>
            <div>
                <dt class="text-sm font-semibold text-gray-600 flex items-center">
                    <i class="fas fa-phone fa-lg text-blue-500 mr-2"></i> @Html.DisplayNameFor(model => model.Telefono)
                </dt>
                <dd class="text-lg text-gray-800">
                    @Html.DisplayFor(model => model.Telefono)
                </dd>
            </div>
            <div>
                <dt class="text-sm font-semibold text-gray-600 flex items-center">
                    <i class="fas fa-map-marker-alt fa-lg text-blue-500 mr-2"></i> @Html.DisplayNameFor(model => model.Direccion)
                </dt>
                <dd class="text-lg text-gray-800">
                    @Html.DisplayFor(model => model.Direccion)
                </dd>
            </div>
            <div>
                <dt class="text-sm font-semibold text-gray-600 flex items-center">
                    <i class="fas fa-toggle-on fa-lg text-blue-500 mr-2"></i> @Html.DisplayNameFor(model => model.EstadoEstudiante)
                </dt>
                <dd class="text-lg text-gray-800">
                    @Html.DisplayFor(model => model.EstadoEstudiante)
                </dd>
            </div>
            <div>
                <dt class="text-sm font-semibold text-gray-600 flex items-center">
                    <i class="fas fa-id-card fa-lg text-blue-500 mr-2"></i> @Html.DisplayNameFor(model => model.DniEstudiante)
                </dt>
                <dd class="text-lg text-gray-800">
                    @Html.DisplayFor(model => model.DniEstudiante)
                </dd>
            </div>
        </dl>

        <div class="mt-6">
            <p class="space-x-4">
                <a href="@Url.Action("ActualizarEstudiante", new { codEstudiante = Model.CodEstudiante })"
                   class="bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600 shadow">
                    Modificar Datos
                </a>
                <a href="@Url.Action("ListarEstudiantes")"
                   class="bg-yellow-500 text-white px-4 py-2 rounded hover:bg-yellow-600 shadow">
                    Volver a la lista
                </a>
            </p>

            <button id="exportPdf" class="mt-4 px-4 py-2 bg-blue-500 text-white rounded shadow hover:bg-blue-600">
                Exportar a PDF
            </button>
        </div>
    </div>

    <script>
        document.getElementById('exportPdf').addEventListener('click', function () {
            const { jsPDF } = window.jspdf;
            const doc = new jsPDF();

            // Datos para la tabla
            const tableData = [
                ["Campo", "Valor"],
                ["Nombre", "@Model.NombreEstudiante"],
                ["Apellido", "@Model.ApellidoEstudiante"],
                ["Edad", "@Model.EdadEstudiante"],
                ["Año", "@Model.AnioEstudiante"],
                ["Sección", "@Model.SeccionEstudiante"],
                ["Grado Académico", "@Model.GradoAcademico"],
                ["Teléfono", "@Model.Telefono"],
                ["Dirección", "@Model.Direccion"],
                ["Estado", "@Model.EstadoEstudiante"],
                ["DNI", "@Model.DniEstudiante"]
            ];

            // Generar tabla tipo Excel
            doc.autoTable({
                head: [["Campo", "Valor"]],
                body: tableData.slice(1), // Solo el contenido sin los encabezados
                styles: {
                    fontSize: 10,
                    cellPadding: 1,
                    overflow: 'linebreak'
                },
                margin: { top: 6
                    }
            });

            // Guardar el PDF
            doc.save('DetalleEstudiante.pdf');
        });
    </script>
</body>
</html>
