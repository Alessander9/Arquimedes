@model Arquimedes.Models.Academico

@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Actualizar Académico</title>
    <style>
        body {
            background-image: linear-gradient(to right, #5e7d82, #3c6c7c, #185a79, #004774, #00326a, #002863, #031d5b, #081252, #08114f, #08104d, #070e4a, #070d48);
        }
    </style>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
</head>
<body class="bg-gray-100 flex items-center justify-center min-h-screen">
    @using (Html.BeginForm("ActualizarAcademico", "Academico", FormMethod.Post, new { id = "updateForm" }))
    {
        @Html.AntiForgeryToken()

        <div class="bg-white p-6 rounded-lg shadow-lg w-full max-w-4xl">
            <h1 class="text-2xl font-bold text-blue-600 mb-6 flex items-center gap-2">
                <span class="material-icons">edit</span> Actualizar Académico
            </h1>
            <hr class="mb-6 border-gray-300">

            @Html.ValidationSummary(true, "", new { @class = "text-red-500 text-sm mb-4" })

            <!-- Grid de 2 columnas -->
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <!-- Código del Académico -->
                @Html.HiddenFor(model => model.CodAcademico)

                <!-- Nombre -->
                <div>
                    <label class="block text-gray-700 font-medium mb-2 flex items-center gap-2">
                        <span class="material-icons text-blue-500">person</span> Nombre
                    </label>
                    @Html.EditorFor(model => model.NombreAcademico, new { htmlAttributes = new { @class = "w-full p-3 border border-gray-300 rounded-lg focus:ring-blue-500 focus:border-blue-500" } })
                    @Html.ValidationMessageFor(model => model.NombreAcademico, "", new { @class = "text-red-500 text-sm mt-1" })
                </div>

                <!-- Apellido -->
                <div>
                    <label class="block text-gray-700 font-medium mb-2 flex items-center gap-2">
                        <span class="material-icons text-blue-500">person_outline</span> Apellido
                    </label>
                    @Html.EditorFor(model => model.ApellidoAcademico, new { htmlAttributes = new { @class = "w-full p-3 border border-gray-300 rounded-lg focus:ring-blue-500 focus:border-blue-500" } })
                    @Html.ValidationMessageFor(model => model.ApellidoAcademico, "", new { @class = "text-red-500 text-sm mt-1" })
                </div>

                <!-- Edad -->
                <div>
                    <label class="block text-gray-700 font-medium mb-2 flex items-center gap-2">
                        <span class="material-icons text-blue-500">calendar_today</span> Edad
                    </label>
                    @Html.EditorFor(model => model.EdadAcademico, new { htmlAttributes = new { @class = "w-full p-3 border border-gray-300 rounded-lg focus:ring-blue-500 focus:border-blue-500", type = "number", min = "18", max = "120" } })
                    @Html.ValidationMessageFor(model => model.EdadAcademico, "", new { @class = "text-red-500 text-sm mt-1" })
                </div>

                <!-- Período Académico -->
                <div>
                    <label class="block text-gray-700 font-medium mb-2 flex items-center gap-2">
                        <span class="material-icons text-blue-500">calendar_month</span> Período Académico
                    </label>
                    @Html.EditorFor(model => model.PeriodoAcademico, new { htmlAttributes = new { @class = "w-full p-3 border border-gray-300 rounded-lg focus:ring-blue-500 focus:border-blue-500" } })
                    @Html.ValidationMessageFor(model => model.PeriodoAcademico, "", new { @class = "text-red-500 text-sm mt-1" })
                </div>

                <!-- Teléfono -->
                <div>
                    <label class="block text-gray-700 font-medium mb-2 flex items-center gap-2">
                        <span class="material-icons text-blue-500">phone</span> Teléfono
                    </label>
                    @Html.EditorFor(model => model.TelefonoAcademico, new { htmlAttributes = new { @class = "w-full p-3 border border-gray-300 rounded-lg focus:ring-blue-500 focus:border-blue-500", type = "tel", maxlength = "9", pattern = "[0-9]{9}" } })
                    @Html.ValidationMessageFor(model => model.TelefonoAcademico, "", new { @class = "text-red-500 text-sm mt-1" })
                </div>

                <!-- Dirección -->
                <div>
                    <label class="block text-gray-700 font-medium mb-2 flex items-center gap-2">
                        <span class="material-icons text-blue-500">place</span> Dirección
                    </label>
                    @Html.EditorFor(model => model.DireccionAcademico, new { htmlAttributes = new { @class = "w-full p-3 border border-gray-300 rounded-lg focus:ring-blue-500 focus:border-blue-500" } })
                    @Html.ValidationMessageFor(model => model.DireccionAcademico, "", new { @class = "text-red-500 text-sm mt-1" })
                </div>

                <!-- Estado -->
                <div>
                    <label class="block text-gray-700 font-medium mb-2 flex items-center gap-2">
                        <span class="material-icons text-blue-500">toggle_on</span> Estado
                    </label>
                    @Html.EditorFor(model => model.EstadoAcademico, new { htmlAttributes = new { @class = "w-full p-3 border border-gray-300 rounded-lg focus:ring-blue-500 focus:border-blue-500" } })
                    @Html.ValidationMessageFor(model => model.EstadoAcademico, "", new { @class = "text-red-500 text-sm mt-1" })
                </div>

                <!-- DNI -->
                <div>
                    <label class="block text-gray-700 font-medium mb-2 flex items-center gap-2">
                        <span class="material-icons text-blue-500">badge</span> DNI
                    </label>
                    @Html.EditorFor(model => model.DniAcademico, new { htmlAttributes = new { @class = "w-full p-3 border border-gray-300 rounded-lg focus:ring-blue-500 focus:border-blue-500", maxlength = "8", pattern = "[0-9]{8}" } })
                    @Html.ValidationMessageFor(model => model.DniAcademico, "", new { @class = "text-red-500 text-sm mt-1" })
                </div>
            </div>

            <!-- Botones -->
            <div class="mt-6 flex justify-between">
                @Html.ActionLink("Volver a la Lista", "ListarAcademicos", null, new { @class = "bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded-lg shadow" })
                <button type="submit" id="saveButton" class="bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded-lg shadow">
                    Guardar
                </button>
            </div>
        </div>
    }

    <script>
        document.getElementById("updateForm").addEventListener("submit", function (e) {
            e.preventDefault();

            Swal.fire({
                title: '¿Estás seguro?',
                text: "Confirma para guardar los cambios.",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Sí, guardar',
                cancelButtonText: 'Cancelar'
            }).then((result) => {
                if (result.isConfirmed) {
                    e.target.submit();
                }
            });
        });
    </script>
</body>
</html>
