@model Arquimedes.Models.Academico

@{
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Registrar Académico</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" />
    <style>
        body {
            background-image: linear-gradient(to right, #5e7d82, #3c6c7c, #185a79, #004774, #00326a, #002863, #031d5b, #081252, #08114f, #08104d, #070e4a, #070d48);
        }
    </style>
</head>
<body class="bg-gray-100 p-6 min-h-screen flex items-center justify-center">
    @using (Html.BeginForm("RegistrarAcademico", "Academico", FormMethod.Post, new { id = "registrarForm" }))
    {
        @Html.AntiForgeryToken()

    <div class="max-w-6xl w-full bg-white rounded-lg shadow-lg p-6">
        <h1 class="text-2xl font-bold text-blue-600 mb-6 flex items-center gap-2">
            <i class="fas fa-edit fa-lg"></i> Registrar Académico
        </h1>            <hr class="mb-6 border-gray-300" />
        @Html.ValidationSummary(true, "", new { @class = "text-red-600 mb-4" })

        <!-- Formulario en 2 columnas -->
        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <!-- CodAcademico -->
            <div>
                <label class="block text-gray-700 font-medium mb-2 flex items-center">
                    <i class="fas fa-hashtag mr-2 text-blue-500"></i> Código Académico
                </label>
                @Html.EditorFor(model => model.CodAcademico, new { htmlAttributes = new { @class = "w-full p-2 border rounded-lg focus:ring-blue-500 focus:border-blue-500" } })
                @Html.ValidationMessageFor(model => model.CodAcademico, "", new { @class = "text-red-600" })
            </div>

            <!-- NombreAcademico -->
            <div>
                <label class="block text-gray-700 font-medium mb-2 flex items-center">
                    <i class="fas fa-user mr-2 text-blue-500"></i> Nombre
                </label>
                @Html.EditorFor(model => model.NombreAcademico, new { htmlAttributes = new { @class = "w-full p-2 border rounded-lg focus:ring-blue-500 focus:border-blue-500" } })
                @Html.ValidationMessageFor(model => model.NombreAcademico, "", new { @class = "text-red-600" })
            </div>

            <!-- ApellidoAcademico -->
            <div>
                <label class="block text-gray-700 font-medium mb-2 flex items-center">
                    <i class="fas fa-user-tag mr-2 text-blue-500"></i> Apellido
                </label>
                @Html.EditorFor(model => model.ApellidoAcademico, new { htmlAttributes = new { @class = "w-full p-2 border rounded-lg focus:ring-blue-500 focus:border-blue-500" } })
                @Html.ValidationMessageFor(model => model.ApellidoAcademico, "", new { @class = "text-red-600" })
            </div>

            <!-- EdadAcademico -->
            <div>
                <label class="block text-gray-700 font-medium mb-2 flex items-center">
                    <i class="fas fa-calendar-alt mr-2 text-blue-500"></i> Edad
                </label>
                @Html.EditorFor(model => model.EdadAcademico, new { htmlAttributes = new { @class = "w-full p-2 border rounded-lg focus:ring-blue-500 focus:border-blue-500", type = "number", min = "0", max = "120" } })
                @Html.ValidationMessageFor(model => model.EdadAcademico, "", new { @class = "text-red-600" })
            </div>

            <!-- PeriodoAcademico -->
            <div>
                <label class="block text-gray-700 font-medium mb-2 flex items-center">
                    <i class="fas fa-calendar mr-2 text-blue-500"></i> Período Académico
                </label>
                @Html.EditorFor(model => model.PeriodoAcademico, new { htmlAttributes = new { @class = "w-full p-2 border rounded-lg focus:ring-blue-500 focus:border-blue-500" } })
                @Html.ValidationMessageFor(model => model.PeriodoAcademico, "", new { @class = "text-red-600" })
            </div>

            <!-- TelefonoAcademico -->
            <div>
                <label class="block text-gray-700 font-medium mb-2 flex items-center">
                    <i class="fas fa-phone mr-2 text-blue-500"></i> Teléfono
                </label>
                @Html.EditorFor(model => model.TelefonoAcademico, new { htmlAttributes = new { @class = "w-full p-2 border rounded-lg focus:ring-blue-500 focus:border-blue-500", type = "tel", pattern = "[0-9]{9}", maxlength = "9", title = "Debe contener exactamente 9 dígitos numéricos" } })
                @Html.ValidationMessageFor(model => model.TelefonoAcademico, "", new { @class = "text-red-600" })
            </div>

            <!-- DireccionAcademico -->
            <div>
                <label class="block text-gray-700 font-medium mb-2 flex items-center">
                    <i class="fas fa-map-marker-alt mr-2 text-blue-500"></i> Dirección
                </label>
                @Html.EditorFor(model => model.DireccionAcademico, new { htmlAttributes = new { @class = "w-full p-2 border rounded-lg focus:ring-blue-500 focus:border-blue-500" } })
                @Html.ValidationMessageFor(model => model.DireccionAcademico, "", new { @class = "text-red-600" })
            </div>

            <!-- EstadoAcademico -->
            <div>
                <label class="block text-gray-700 font-medium mb-2 flex items-center">
                    <i class="fas fa-toggle-on mr-2 text-blue-500"></i> Estado
                </label>
                @Html.DropDownListFor(
                    model => model.EstadoAcademico,
                    new SelectList(new[] {
                        new { Value = "Activo", Text = "Activo" },
                        new { Value = "Inactivo", Text = "Inactivo" }
                    }, "Value", "Text"),
                    "-- Seleccione un Estado --",
                    new { @class = "w-full p-2 border rounded-lg focus:ring-blue-500 focus:border-blue-500" })
                @Html.ValidationMessageFor(model => model.EstadoAcademico, "", new { @class = "text-red-600" })
            </div>

            <!-- DniAcademico -->
            <div>
                <label class="block text-gray-700 font-medium mb-2 flex items-center">
                    <i class="fas fa-id-card mr-2 text-blue-500"></i> DNI
                </label>
                @Html.EditorFor(model => model.DniAcademico, new { htmlAttributes = new { @class = "w-full p-2 border rounded-lg focus:ring-blue-500 focus:border-blue-500", pattern = "[0-9]{8}", maxlength = "8", title = "Debe contener exactamente 8 dígitos numéricos" } })
                @Html.ValidationMessageFor(model => model.DniAcademico, "", new { @class = "text-red-600" })
            </div>
        </div>

        <!-- Botones de Acción -->
        <div class="mt-6 flex justify-end space-x-4">
            <button type="submit" id="submitButton" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-lg shadow">Registrar</button>
            <a href="@Url.Action("ListarAcademicos")" class="bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded-lg shadow">Regresar</a>
        </div>

        <!-- Botón Volver con Gradiente Rojo a Morado -->
        <div class="mt-4 flex justify-end space-x-2">

            <a href="@Url.Action("vistaAdministrador", "Administrador")" class="px-4 py-2 bg-gradient-to-r from-red-500 to-purple-600 text-white rounded-lg shadow-md hover:from-red-600 hover:to-purple-700 flex items-center gap-2 transition-colors duration-300">
                <span class="material-icons">arrow_back</span> Salir al menú
            </a>
        </div>


        </div>
        }

        <script>
            document.getElementById('submitButton').addEventListener('click', function (event) {
                event.preventDefault(); // Detener el envío del formulario
                Swal.fire({
                    title: '¿Estás seguro?',
                    text: "Confirma para registrar el académico.",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Sí, registrar',
                    cancelButtonText: 'Cancelar'
                }).then((result) => {
                    if (result.isConfirmed) {
                        document.getElementById('registrarForm').submit(); // Enviar el formulario si se confirma
                    }
                });
            });
        </script>
</body>
</html>
