@model Estudiante

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Actualizar Estudiante</title>
    <style>
        body {
            background-image: linear-gradient(to right, #5e7d82, #3c6c7c, #185a79, #004774, #00326a, #002863, #031d5b, #081252, #08114f, #08104d, #070e4a, #070d48);
        }
    </style>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" />
</head>
<body class="bg-gray-100 p-6">
    @using (Html.BeginForm("ActualizarEstudiante", "Estudiante", FormMethod.Post, new { id = "updateForm" }))
    {
        @Html.AntiForgeryToken()

        <div class="max-w-5xl mx-auto bg-white p-6 rounded-lg shadow-md">
            <h4 class="text-2xl font-semibold text-gray-700 mb-4">
                <i class="fas fa-edit fa-lg text-blue-500"></i> Actualizar Estudiante
            </h4>
            <hr class="mb-4">
            @Html.ValidationSummary(true, "", new { @class = "text-red-600" })
            @Html.HiddenFor(model => model.CodEstudiante)

            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <!-- Nombre -->
                <div>
                    <label class="block text-gray-700 font-medium mb-2 flex items-center">
                        <i class="fas fa-user fa-lg text-blue-500 mr-2"></i> Nombre
                    </label>
                    @Html.EditorFor(model => model.NombreEstudiante, new { htmlAttributes = new { @class = "w-full mt-1 p-2 border border-gray-300 rounded-lg focus:ring focus:ring-blue-200" } })
                    @Html.ValidationMessageFor(model => model.NombreEstudiante, "", new { @class = "text-red-600" })
                </div>

                <!-- Apellido -->
                <div>
                    <label class="block text-gray-700 font-medium mb-2 flex items-center">
                        <i class="fas fa-user-tag fa-lg text-blue-500 mr-2"></i> Apellido
                    </label>
                    @Html.EditorFor(model => model.ApellidoEstudiante, new { htmlAttributes = new { @class = "w-full mt-1 p-2 border border-gray-300 rounded-lg focus:ring focus:ring-blue-200" } })
                    @Html.ValidationMessageFor(model => model.ApellidoEstudiante, "", new { @class = "text-red-600" })
                </div>

                <!-- Edad -->
                <div>
                    <label class="block text-gray-700 font-medium mb-2 flex items-center">
                        <i class="fas fa-calendar-alt fa-lg text-blue-500 mr-2"></i> Edad
                    </label>
                    @Html.EditorFor(model => model.EdadEstudiante, new { htmlAttributes = new { @class = "w-full mt-1 p-2 border border-gray-300 rounded-lg focus:ring focus:ring-blue-200" } })
                    @Html.ValidationMessageFor(model => model.EdadEstudiante, "", new { @class = "text-red-600" })
                </div>

                <!-- Año -->
                <div>
                    <label class="block text-gray-700 font-medium mb-2 flex items-center">
                        <i class="fas fa-graduation-cap fa-lg text-blue-500 mr-2"></i> Año
                    </label>
                    @Html.DropDownListFor(
                        model => model.AnioEstudiante,
                        new SelectList(new[]
                        {
                            new { Value = 1, Text = "1° Grado" },
                            new { Value = 2, Text = "2° Grado" },
                            new { Value = 3, Text = "3° Grado" },
                            new { Value = 4, Text = "4° Grado" },
                            new { Value = 5, Text = "5° Grado" },
                            new { Value = 6, Text = "6° Grado" }
                        }, "Value", "Text"),
                        "-- Seleccione un año --",
                        new { @class = "w-full border border-gray-300 rounded-lg p-3 focus:ring-blue-500 focus:border-blue-500" }
                    )
                    @Html.ValidationMessageFor(model => model.AnioEstudiante, "", new { @class = "text-red-600" })
                </div>

                <!-- Sección -->
                <div>
                    <label class="block text-gray-700 font-medium mb-2 flex items-center">
                        <i class="fas fa-layer-group fa-lg text-blue-500 mr-2"></i> Sección
                    </label>
                    @Html.DropDownList("SeccionEstudiante", new SelectList(new[] {
                        new { Value = "A", Text = "A" },
                        new { Value = "B", Text = "B" },
                        new { Value = "C", Text = "C" },
                        new { Value = "D", Text = "D" }
                    }, "Value", "Text"), "Seleccione Sección", new { @class = "w-full mt-1 p-2 border border-gray-300 rounded-lg focus:ring focus:ring-blue-200" })
                    @Html.ValidationMessageFor(model => model.SeccionEstudiante, "", new { @class = "text-red-600" })
                </div>

                <!-- Grado Académico -->
                <div>
                    <label class="block text-gray-700 font-medium mb-2 flex items-center">
                        <i class="fas fa-school fa-lg text-blue-500 mr-2"></i> Grado Académico
                    </label>
                    @Html.DropDownList("GradoAcademico", new SelectList(new[] {
                        new { Value = "Primaria", Text = "Primaria" },
                        new { Value = "Secundaria", Text = "Secundaria" }
                    }, "Value", "Text"), "Seleccione Grado Académico", new { @class = "w-full mt-1 p-2 border border-gray-300 rounded-lg focus:ring focus:ring-blue-200" })
                    @Html.ValidationMessageFor(model => model.GradoAcademico, "", new { @class = "text-red-600" })
                </div>

                <!-- Teléfono -->
                <div>
                    <label class="block text-gray-700 font-medium mb-2 flex items-center">
                        <i class="fas fa-phone fa-lg text-blue-500 mr-2"></i> Teléfono
                    </label>
                    @Html.EditorFor(model => model.Telefono, new { htmlAttributes = new { @class = "w-full mt-1 p-2 border border-gray-300 rounded-lg focus:ring focus:ring-blue-200" } })
                    @Html.ValidationMessageFor(model => model.Telefono, "", new { @class = "text-red-600" })
                </div>

                <!-- Dirección -->
                <div>
                    <label class="block text-gray-700 font-medium mb-2 flex items-center">
                        <i class="fas fa-map-marker-alt fa-lg text-blue-500 mr-2"></i> Dirección
                    </label>
                    @Html.EditorFor(model => model.Direccion, new { htmlAttributes = new { @class = "w-full mt-1 p-2 border border-gray-300 rounded-lg focus:ring focus:ring-blue-200" } })
                    @Html.ValidationMessageFor(model => model.Direccion, "", new { @class = "text-red-600" })
                </div>

                <!-- Estado -->
                <div>
                    <label class="block text-gray-700 font-medium mb-2 flex items-center">
                        <i class="fas fa-toggle-on fa-lg text-blue-500 mr-2"></i> Estado
                    </label>
                    @Html.DropDownList("EstadoEstudiante", new SelectList(new[] {
                        new { Value = "Activo", Text = "Activo" },
                        new { Value = "Inactivo", Text = "Inactivo" }
                    }, "Value", "Text"), "Seleccione Estado", new { @class = "w-full mt-1 p-2 border border-gray-300 rounded-lg focus:ring focus:ring-blue-200" })
                    @Html.ValidationMessageFor(model => model.EstadoEstudiante, "", new { @class = "text-red-600" })
                </div>

                <!-- DNI -->
                <div>
                    <label class="block text-gray-700 font-medium mb-2 flex items-center">
                        <i class="fas fa-id-card fa-lg text-blue-500 mr-2"></i> DNI
                    </label>
                    @Html.EditorFor(model => model.DniEstudiante, new { htmlAttributes = new { @class = "w-full mt-1 p-2 border border-gray-300 rounded-lg focus:ring focus:ring-blue-200" } })
                    @Html.ValidationMessageFor(model => model.DniEstudiante, "", new { @class = "text-red-600" })
                </div>
            </div>

            <!-- Botón Guardar -->
            <div class="mt-6 text-right">
                <button type="submit" id="saveButton" class="px-4 py-2 bg-blue-500 text-white rounded-lg shadow hover:bg-blue-600">Guardar</button>
            </div>
            <div class="mt-6 text-right">
                <a href="@Url.Action("ListarEstudiantes")"
                   class="bg-yellow-500 text-white px-4 py-2 rounded hover:bg-yellow-600 shadow">
                    Volver a la lista
                </a>
            </div>
        </div>
    }

    <script>
        document.getElementById('saveButton').addEventListener('click', function (event) {
            event.preventDefault(); // Detener el envío del formulario
            Swal.fire({
                title: '¿Estás seguro?',
                text: "Confirma para guardar los cambios del estudiante.",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Sí, guardar',
                cancelButtonText: 'Cancelar'
            }).then((result) => {
                if (result.isConfirmed) {
                    document.getElementById('updateForm').submit(); // Enviar el formulario si se confirma
                }
            });
        });
    </script>
</body>
</html>
